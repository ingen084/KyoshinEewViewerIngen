name: release

on:
  push:
    branches:
      - '*'
    tags:
      - '*.*.*'
jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    env:
      RELEASE_PREFIX: KyoshinEewViewer
    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    
    - name: Build
      run: >
        dotnet publish src/KyoshinEewViewer/KyoshinEewViewer.csproj
        -c Release
        -r ${{ fromJson('{ "windows-latest": "win10-x64", "ubuntu-latest": "linux-x64" }')[matrix.os] }}
        -o tmp
        -p:PublishReadyToRun=${{ (matrix.os == 'windows-latest' && 'true') || 'false' }}
        -p:PublishSingleFile=true
        -p:PublishTrimmed=true
        --self-contained true
      env:
        APP_VERSION: ${{ (contains(github.ref, 'tags/') && env.CI_ACTION_REF_NAME) || '0.0.1' }}
        BUILD_NUMBER: ${{ env.CI_RUN_NUMBER }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.RELEASE_PREFIX }}-${{ matrix.os }}
        path: tmp/*

    - name: Archive
      uses: TheDoctor0/zip-release@0.6.0
      if: startsWith(github.ref, 'refs/tags/')
      with:
        type: 'zip'
        directory: tmp
        path: '*'
        filename: ../${{ env.RELEASE_PREFIX }}-${{ matrix.os }}.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.RELEASE_PREFIX }}-${{ matrix.os }}.zip
        name: v${{ env.CI_ACTION_REF_NAME }}
        draft: true
        prerelease: false
        
  publish-macos:
    runs-on: ${{ macos-latest }}
    env:
      RELEASE_PREFIX: KyoshinEewViewer
    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    
    - name: Restore
      run: dotnet restore -r osx-x64 src/KyoshinEewViewer/KyoshinEewViewer.csproj
    - name: Build
      run: >
        dotnet msbuild
        -t:BundleApp
        -p:RuntimeIdentifier=osx-x64
        -p:Configuration=Release
        src/KyoshinEewViewer/KyoshinEewViewer.csproj
        -p:PublishDir=../../tmp
        -p:PublishReadyToRun=false
        -p:PublishSingleFile=true
        -p:PublishTrimmed=true
        -p:UseAppHost=true
      env:
        APP_VERSION: ${{ (contains(github.ref, 'tags/') && env.CI_ACTION_REF_NAME) || '0.0.1' }}
        BUILD_NUMBER: ${{ env.CI_RUN_NUMBER }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.RELEASE_PREFIX }}-macos-latest
        path: tmp/*

    - name: Archive
      uses: TheDoctor0/zip-release@0.6.0
      if: startsWith(github.ref, 'refs/tags/')
      with:
        type: 'zip'
        directory: tmp
        path: '*'
        filename: ../${{ env.RELEASE_PREFIX }}-macos-latest.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.RELEASE_PREFIX }}-macos-latest.zip
        name: v${{ env.CI_ACTION_REF_NAME }}
        draft: true
        prerelease: false
